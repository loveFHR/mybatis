<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fhr.mybatis.mapper.EmpMapper">

    <!--
        字段名和属性名不一致时，如何处理映射关系
        1.为查询的字段设置别名，和属性名保持一致
        2.当字段符合MySQL的要求使用_，而属性符合java要求使用驼峰
        此时可以在mybatis的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰(setting)
        emp_id:empId,emp_name:empName
        3.使用resultMap自定义映射处理
    -->
    <!--
        resultMap:设置自定义的映射关系
        id:唯一标识
        type:处理映射关系的实体类的类型
        常用的标签:
        id:处理主键和实体类中属性的映射关系
        result:处理普通字段和实体类的映射关系
        column:设置映射关系中的字段名，必须是sql查询出的某个字段
        property:设置映射关系中的属性的属性名，必须是处理的实体类类型中的属性名
    -->
    <resultMap id="empResultMap" type="Emp">
        <!--id设置主键的映射关系-->
        <!--result设置普通字段的映射关系-->
        <id column="emp_id" property="empId" />
        <result column="emp_name" property="empName" />
        <result column="age" property="age" />
        <result column="gender" property="gender" />
    </resultMap>

    <!--Emp getEmpByEmpId(@param("empId")Integer id);-->
    <select id="getEmpByEmpId" resultMap="empResultMap"><!--自定义映射关系-->
        select * from t_emp where emp_id = #{empId}
    </select>

    <select id="getEmpByEmpIdOld" resultType="Emp">
        <!--select emp_id empId, emp_name empName,age,gender from t_emp where emp_id = #{empId}--><!--别名-->
        select * from t_emp where emp_id = #{empId}<!--核心配置文件中设置一个全局配置-->
    </select>

    <!--Emp getEmpAndDeptById(@Param("empId")Integer empId);-->
    <select id="getEmpAndDeptById" resultMap="Emp">
        select * from t_emp left join t_dept on t_emp.dept_id = t_dept.dept_id where t_emp.emp_id = #{empId}

    </select>
</mapper>